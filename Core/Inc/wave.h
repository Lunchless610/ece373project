#include <stdint.h>

// WAV文件的元数据结构
typedef struct {
    char chunkID[4];       // "RIFF"
    uint32_t chunkSize;    // 文件大小
    char format[4];        // "WAVE"
    char subchunk1ID[4];   // "fmt "
    uint32_t subchunk1Size;// 16 for PCM
    uint16_t audioFormat;  // PCM = 1
    uint16_t numChannels;  // 声道数量
    uint32_t sampleRate;   // 采样�???????
    uint32_t byteRate;     // 每秒字节�???????
    uint16_t blockAlign;   // 每样本的字节�???????
    uint16_t bitsPerSample;// 每样本的位数
    char subchunk2ID[4];   // "data"
    uint32_t subchunk2Size;// 数据大小
} WAVHeader;

void parseWAVHeader(const uint8_t *data, WAVHeader *header);

//uint8_t wav_data[]; = {
//	    0x52, 0x49, 0x46, 0x46, 0x6e, 0x84, 0x29, 0x00, 0x57, 0x41, 0x56, 0x45,
//	    0x66, 0x6d, 0x74, 0x20, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00,
//	    0x44, 0xac, 0x00, 0x00, 0x10, 0xb1, 0x02, 0x00, 0x04, 0x00, 0x10, 0x00,
//	    0x4c, 0x49, 0x53, 0x54, 0x42, 0x00, 0x00, 0x00, 0x49, 0x4e, 0x46, 0x4f,
//	    0x49, 0x43, 0x4d, 0x54, 0x20, 0x00, 0x00, 0x00, 0x44, 0x6f, 0x77, 0x6e,
//	    0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20,
//	    0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x2e,
//	    0x63, 0x6f, 0x6d, 0x00, 0x49, 0x53, 0x46, 0x54, 0x0e, 0x00, 0x00, 0x00,
//	    0x4c, 0x61, 0x76, 0x66, 0x35, 0x36, 0x2e, 0x34, 0x30, 0x2e, 0x31, 0x30,
//	    0x31, 0x00, 0x64, 0x61, 0x74, 0x61, 0x00, 0x84, 0x29, 0x00, 0xe0, 0xff,
//	    0x2f, 0x00, 0xe4, 0xff, 0x05, 0x00, 0xef, 0xff, 0xcd, 0xff, 0xee, 0xff,
//	    0x97, 0xff, 0xf7, 0xff, 0x86, 0xff, 0x04, 0x00, 0x8d, 0xff, 0x12, 0x00,
//	    0x79, 0xff, 0x0e, 0x00, 0x3d, 0xff, 0xf7, 0xff, 0x0e, 0xff, 0xd0, 0xff,
//	    0x16, 0xff, 0xaa, 0xff, 0x41, 0xff, 0x97, 0xff, 0x5e, 0xff, 0x97, 0xff,
//	    0x4b, 0xff, 0x9b, 0xff, 0x0e, 0xff, 0x91, 0xff, 0xca, 0xfe, 0x8c, 0xff,
//	    0xa7, 0xfe, 0x92, 0xff, 0xa5, 0xfe, 0xaa, 0xff, 0xb2, 0xfe, 0xbe, 0xff,
//	    0xbf, 0xfe, 0xb4, 0xff, 0xc9, 0xfe, 0x8a, 0xff, 0xc5, 0xfe, 0x61, 0xff,
//	    0xa5, 0xfe, 0x57, 0xff, 0x6b, 0xfe, 0x6d, 0xff, 0x53, 0xfe, 0x7f, 0xff,
//	    0x67, 0xfe, 0x83, 0xff, 0x6b, 0xfe, 0x7f, 0xff, 0x2f, 0xfe, 0x87, 0xff,
//	    0xdc, 0xfd, 0x94, 0xff, 0xb5, 0xfd, 0x90, 0xff, 0xb9, 0xfd, 0x6a, 0xff,
//	    0xcb, 0xfd, 0x1f, 0xff, 0xd2, 0xfd, 0xcd, 0xfe, 0xb9, 0xfd, 0x83, 0xfe,
//	    0x73, 0xfd, 0x51, 0xfe, 0x07, 0xfd, 0x2b, 0xfe, 0x9d, 0xfc, 0x13, 0xfe,
//	    0x57, 0xfc, 0x04, 0xfe, 0x49, 0xfc, 0x13, 0xfe, 0x68, 0xfc, 0x35, 0xfe,
//	    0x80, 0xfc, 0x52, 0xfe, 0x72, 0xfc, 0x4e, 0xfe, 0x54, 0xfc, 0x22, 0xfe,
//	    0x4e, 0xfc, 0xe3, 0xfd, 0x47, 0xfc, 0xbe, 0xfd, 0x16, 0xfc, 0xb0, 0xfd,
//	    0xa0, 0xfb, 0x91, 0xfd, 0x06, 0xfb, 0x43, 0xfd, 0x74, 0xfa, 0xfb, 0xfc,
//	    0xff, 0xf9, 0xfa, 0xfc, 0xaf, 0xf9, 0x40, 0xfd, 0xa1, 0xf9, 0x92, 0xfd,
//	    0xe8, 0xf9, 0xab, 0xfd, 0x64, 0xfa, 0x84, 0xfd, 0xec, 0xfa, 0x41, 0xfd,
//	    0x51, 0xfb, 0x26, 0xfd, 0x71, 0xfb, 0x54, 0xfd, 0x6d, 0xfb, 0xa2, 0xfd,
//	    0x8b, 0xfb, 0xc3, 0xfd, 0xca, 0xfb, 0xa1, 0xfd, 0xce, 0xfb, 0x56, 0xfd,
//	    0x5a, 0xfb, 0x1d, 0xfd, 0x90, 0xfa, 0x1e, 0xfd, 0xd3, 0xf9, 0x3c, 0xfd,
//	    0x80, 0xf9, 0x42, 0xfd, 0xb1, 0xf9, 0x25, 0xfd, 0x40, 0xfa, 0x0f, 0xfd,
//	    0xc3, 0xfa, 0x22, 0xfd, 0xf5, 0xfa, 0x56, 0xfd, 0xde, 0xfa, 0x89, 0xfd,
//	    0xd7, 0xfa, 0xa2, 0xfd, 0x21, 0xfb, 0x8b, 0xfd, 0xa9, 0xfb, 0x60, 0xfd,
//	    0x1e, 0xfc, 0x42, 0xfd, 0x25, 0xfc, 0x33, 0xfd, 0xd0, 0xfb, 0x22, 0xfd,
//	    0x8e, 0xfb, 0x10, 0xfd, 0xf8, 0xfb, 0x0a, 0xfd, 0x25, 0xfd, 0x0b, 0xfd,
//	    0x76, 0xfe, 0x0c, 0xfd, 0x57, 0xff, 0x15, 0xfd, 0xcc, 0xff, 0x3a, 0xfd,
//	    0xe1, 0xff, 0x89, 0xfd, 0x7d, 0xff, 0xf5, 0xfd, 0x9d, 0xfe, 0x52, 0xfe,
//	    0xb4, 0xfd, 0x7d, 0xfe, 0x3e, 0xfd, 0x7f, 0xfe, 0x24, 0xfd, 0x70, 0xfe,
//	    0x0e, 0xfd, 0x7f, 0xfe, 0xcf, 0xfc, 0xcc, 0xfe, 0x95, 0xfc, 0x5a, 0xff,
//	    0xba, 0xfc, 0xf4, 0xff, 0x7a, 0xfd, 0x41, 0x00, 0xad, 0xfe, 0x24, 0x00,
//	    0xcb, 0xff, 0xe0, 0xff, 0x8d, 0x00, 0xc4, 0xff, 0xe9, 0x00, 0x0d, 0x00,
//	    0xb5, 0x00, 0xbb, 0x00, 0xe7, 0xff, 0x9b, 0x01, 0xc4, 0xfe, 0x5c, 0x02,
//	};
